buildscript {
  ext {
    kotlinVersion = '1.3.20'
    jvmVersion = '1.8'
    springBootVersion = '2.1.2.RELEASE'
  }

  repositories {
    maven {
      url "https://repo1.maven.org/maven2"
    }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

plugins {
  id 'idea'
  id 'maven'
  id 'signing'
}

apply plugin: 'kotlin'

group = 'de.codecentric.hikaku'
version = '0.0.1-SNAPSHOT'
archivesBaseName = 'hikaku'
sourceCompatibility = jvmVersion
targetCompatibility = jvmVersion

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = jvmVersion
  }
}

compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = jvmVersion
  }
}

repositories {
  maven {
    url "https://repo1.maven.org/maven2"
  }
}

dependencies {
  api 'org.springframework:spring-webmvc:5.1.4.RELEASE'

  implementation 'io.swagger.parser.v3:swagger-parser-v3:2.0.8'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

  testImplementation 'org.junit.platform:junit-platform-launcher:1.3.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5:1.3.11'
  testImplementation 'org.assertj:assertj-core:3.11.1'
  testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
  testImplementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
}

test {
  useJUnitPlatform()
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
      }

      pom.project {
        name 'hikaku'
        packaging 'jar'

        description "A library to test if the implementation of a REST-API meets its specification."
        url 'https://github.com/codecentric/hikaku'

        scm {
          connection 'scm:git:git://github.com/codecentric/hikaku.git'
          developerConnection 'scm:git:ssh://git@github.com:codecentric/hikaku.git'
          url 'https://github.com/codecentric/hikaku'
        }

        licenses {
          license {
            name 'Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0'
          }
        }

        developers {
          developer {
            id 'cc-jhr'
            name 'Jannes Heinrich'
            email 'jannes.heinrich@codecentric.de'
          }
        }
      }
    }
  }
}